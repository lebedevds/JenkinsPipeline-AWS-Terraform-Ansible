---
- hosts: all
  gather_facts: no
  tasks:
    - name: Wait 600 seconds for connection to become reachable/usable
        wait_for_connection:



- name: Build provisioning
  hosts: tag_Name_build
  remote_user: ubuntu
  vars_files:
    - ./vars.yml


  tasks:
  - name: Ensure necessary packages is present
    apt:
      update_cache: yes
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - default-jdk
      - maven
      - python3-pip

  - name: Ensure the git repository is cloned
    git:
      repo: "{{ GIT_LINK }}"
      dest: /tmp/WAR
      clone: yes

  - name: Ensure war file is ready
    command: mvn package -f /tmp/WAR/pom.xml

  - name: Requirements for s3_sync
    command: python3 -m pip install boto3 python-dateutil

  - name: Ensure war file in s3 backet
    s3_sync:
      bucket: mybacket1.test5.com
      file_root: /tmp/WAR/target/
      include: "*.war"
      aws_access_key: "{{ AWS_ACCEESS_KEY }}"
      aws_secret_key: "{{ AWS_SECRET_KEY }}"
      region: "{{ AWS_REGION }}"
      permission: private



- name: App server provisioning
  hosts: tag_Name_app
  remote_user: ubuntu
  vars_files:
    - ./vars.yml

  tasks:
    - name: Ensure necessary packages is present
      apt:
        update_cache: yes
        name: "{{ packages }}"
        state: present
      vars:
        packages:
        - docker.io
        - python3-pip

    - name: Requirements for aws_s3
      command: python3 -m pip install botocore boto3

    - name: Ensure derictory for war file is ready
      file:
        path: /home/ubuntu/war/
        state: directory

    - name: Ensure war file on App Server
      amazon.aws.aws_s3:
        bucket: mybacket1.test5.com
        object: hello-1.0.war
        dest: /home/ubuntu/war/hello-1.0.war
        mode: get
        aws_access_key: "{{ AWS_ACCEESS_KEY }}"
        aws_secret_key: "{{ AWS_SECRET_KEY }}"
        region: "{{ AWS_REGION }}"

    - name: Ensure old version is not running
      shell: |
        docker stop webapp
        docker rm webapp
      ignore_errors: yes

    - name: Ensure docker container is started
      command: docker run --name webapp -d -p 8080:8080 -v /home/ubuntu/war/:/usr/local/tomcat/webapps/ --restart=always tomcat:9.0.20-jre8-alpine

