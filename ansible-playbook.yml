---
- hosts: all
  gather_facts: no
  tasks:
  - name: Wait 30 seconds for connection to become reachable/usable
    wait_for_connection:
      delay: 30
      timeout: 60



- name: Build provisioning
  hosts: tag_Name_build
  remote_user: ubuntu
  vars_files:
    - ./vars.yml


  tasks:
  - name: Ensure necessary packages is present
    apt:
      update_cache: yes
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - default-jdk
      - maven
      - python3-pip
      - docker.io

  - name: Ensure the git repository is cloned
    git:
      repo: "{{ GIT_LINK }}"
      dest: /tmp/WAR
      clone: yes

  - name: Ensure war file is ready
    command: mvn package -f /tmp/WAR/pom.xml

  - name: Ensure Dockerfile on build server
    copy:
      src: ./Dockerfile
      dest: /tmp/

  - name: Build docker image
    command: docker build /tmp/ -t lebedevds/war_image:0.1

  - name: Ensure image on DockerHub
    shell: |
      docker login -u lebedevds -p "{{ DOCKER_PASSWORD }}"
      docker tag lebedevds/war_image:0.1 lebedevds/war_image:0.1
      docker push lebedevds/war_image:0.1



- name: App server provisioning
  hosts: tag_Name_app
  remote_user: ubuntu

  tasks:
    - name: Ensure necessary packages is present
      apt:
        update_cache: yes
        name: docker.io
        state: present

    - name: Ensure old version is not running
      shell: |
        docker stop webapp
        docker rm webapp
      ignore_errors: yes

    - name: Ensure docker container is started
      command: docker run --name webapp -d -p 8080:8080 --restart=always lebedevds/war_image:0.1
